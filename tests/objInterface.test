# Copyright Â© 2021 Nathan Coulter

# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

if {"::tcltest" ni [namespace children]} {
    package require tcltest 2.5
    namespace import -force ::tcltest::*
}

::tcltest::loadTestedCommands
testConstraint testindexhex [expr {[namespace which testindexhex] ne {}}]

variable list
variable res


test {list length} {INST_LIST_INDEX_IMM} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	llength $list
    } -cleanup {
	catch {unset list}
    } -result -1 

test {list lindex constant} {INST_LIST_INDEX_IMM} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lindex $list 731
    } -cleanup {
	catch {unset list}
    } -result 2db


test {list lindex constant end} {INST_LIST_INDEX_IMM} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	after 100
	lindex $list end
    } -cleanup {
	catch {unset list}
	catch {unset res}
    } -returnCodes 1 -result {list length indeterminate}



test {list lindex dynamic} {INST_LIST_INDEX} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	set val [expr {731 + 0}]
	after 100
	lindex $list $val
    } -cleanup {
	catch {unset list}
    } -result 2db


test {list lindex dynamic end} {INST_LIST_INDEX} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	append index e n d
	lindex $list $index
    } -cleanup {
	catch {unset list}
	catch {unset res}
    } -returnCodes 1 -result {list length indeterminate}


test {list lindex drill} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lindex $list 731 0 0 0
    } -cleanup {
	catch {unset list}
    } -result 2db


test {list lrange constant} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lrange $list 10 15
    } -cleanup {
	catch {unset list}
    } -result {a b c d e f}


test {list lrange dynamic} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	set first [expr {10 + 0}]
	set last [expr {15 + 0}]
	lrange $list $first $last
    } -cleanup {
	catch {unset list}
    } -result {a b c d e f}


test {list lrange end constant} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lrange $list 10 end
    } -cleanup {
	catch {unset list}
    } -returnCodes 1 -result {list length indeterminate}


test {list lrange end dynamic} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	set back [expr {-5 + 0}]
	lrange $list 10 end-$back
    } -cleanup {
	catch {unset list}
    } -returnCodes 1 -result {list length indeterminate}


test {list lrange end minus constant} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lrange $list 10 end-1
    } -cleanup {
	catch {unset list}
    } -returnCodes 1 -result {list length indeterminate}


test {list lsearch} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lsearch $list ff
    } -cleanup {
	catch {unset list}
    } -result 255


test {list lsearch sorted} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lsearch -sorted $list ff
    } -cleanup {
	catch {unset list}
    } -returnCodes 1 -result {sorted list is incoherent}


test {list lsearch start} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lsearch -start 5171 -glob $list a*
    } -cleanup {
	catch {unset list}
    } -result 40960


test {string index} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	lappend res [string index $list 5]
	return $res
    } -cleanup {
	catch {unset list}
    } -result 40960


test {string length} {} \
    -constraints testindexhex \
    -body {
	set list [testindexhex]
	string length $list
    } -cleanup {
	catch {unset list}
    } -result -1

# cleanup
::tcltest::cleanupTests
return
